<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.1.1">
<procedure name="main">
<interface/>
<body>
<l>ToolName:='Create shape model'</l>
<l>InfoString:='Use input region to create and save scaled and rotated shape model'</l>
<c>*press the button Execute to save the model</c>
<l>HalconCallbacks:=['Save']</l>
<c>*input parameters set rotation angle and scale of shape model</c>
<l>AngleStart_Real:=0</l>
<l>AngleStop_Real:=6.29</l>
<l>ScaleMin_Real:=0.1</l>
<l>ScaleMax_Real:=1</l>
<c>*user may defines filename and specific file directory, or leaves it as default</c>
<l>filename_String:='model'</l>
<l>file_directory_String:='-'</l>
<c></c>
<l>output_region_Region_Color:=[255,0,0]</l>
<c></c>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="HalconRun">
<interface>
<io>
<par name="model_Region" base_type="iconic" dimension="0"/>
<par name="input_Img" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="output_region_Region" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="AngleStart_Real" base_type="ctrl" dimension="0"/>
<par name="AngleStop_Real" base_type="ctrl" dimension="0"/>
<par name="ScaleMin_Real" base_type="ctrl" dimension="0"/>
<par name="ScaleMax_Real" base_type="ctrl" dimension="0"/>
<par name="filename_String" base_type="ctrl" dimension="0"/>
<par name="file_directory_String" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="ModelID_Tuple_" base_type="ctrl" dimension="0"/>
<par name="file_toPrint_String" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<c>*if user doesn't put specific directory, the model is saved in default directory</c>
<c>*as default the  model is saved in 'images' folder on industrial controller</c>
<c>*specific directory works only when using BVS Cockpit installed on PC</c>
<c>*file_toPrint_String shows where the model is saved</c>
<l>if(file_directory_String!='-')</l>
<l>    file_toPrint_String:=file_directory_String+filename_String+'.shm'</l>
<l>else</l>
<l>    file_toPrint_String:='/data/icsServer/share/images/'+filename_String+'.shm'    </l>
<l>endif</l>
<c></c>
<c>*creating shape model from given region</c>
<l>get_region_convex (model_Region, Rows, Columns)</l>
<l>gen_contour_polygon_xld (output_contour_Contour, Rows, Columns)</l>
<l>gen_region_contour_xld (output_contour_Contour, output_region_Region, 'filled')</l>
<c></c>
<l>area_center_xld (output_contour_Contour, Area, Row, Column, PointOrder)</l>
<l>reduce_domain (input_Img, output_region_Region, Image)</l>
<c></c>
<l>create_scaled_shape_model (Image, 'auto', AngleStart_Real, AngleStop_Real, 'auto', ScaleMin_Real, ScaleMax_Real, 'auto', 'auto', 'use_polarity', 'auto', 'auto', ModelID_Tuple_)</l>
<c></c>
<l>return ()</l>
</body>
<docu id="HalconRun">
<parameters>
<parameter id="AngleStart_Real"/>
<parameter id="AngleStop_Real"/>
<parameter id="ModelID_Tuple_"/>
<parameter id="ScaleMax_Real"/>
<parameter id="ScaleMin_Real"/>
<parameter id="file_directory_String"/>
<parameter id="file_toPrint_String"/>
<parameter id="filename_String"/>
<parameter id="input_Img"/>
<parameter id="model_Region"/>
<parameter id="output_region_Region"/>
</parameters>
</docu>
</procedure>
<procedure name="HalconFinalize">
<interface>
<ic>
<par name="ModelID_Tuple" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<l>clear_shape_model (ModelID_Tuple)</l>
<c></c>
<l>return ()</l>
</body>
<docu id="HalconFinalize">
<parameters>
<parameter id="ModelID_Tuple"/>
</parameters>
</docu>
</procedure>
<procedure name="HalconInit">
<interface/>
<body>
<l>return ()</l>
</body>
<docu id="HalconInit">
<parameters/>
</docu>
</procedure>
<procedure name="Save">
<interface>
<ic>
<par name="ModelID_Tuple" base_type="ctrl" dimension="0"/>
<par name="filename_String" base_type="ctrl" dimension="0"/>
<par name="file_directory_String" base_type="ctrl" dimension="0"/>
</ic>
</interface>
<body>
<c></c>
<l>if(file_directory_String!='-')</l>
<l>    file_dir:=file_directory_String+filename_String+'.shm'</l>
<l>else</l>
<l>    file_dir:='/data/icsServer/share/images/'+filename_String+'.shm'    </l>
<l>endif</l>
<c></c>
<l>write_shape_model (ModelID_Tuple, file_dir)</l>
<c></c>
<l>return ()</l>
</body>
<docu id="Save">
<parameters>
<parameter id="ModelID_Tuple"/>
<parameter id="file_directory_String"/>
<parameter id="filename_String"/>
</parameters>
</docu>
</procedure>
</hdevelop>
