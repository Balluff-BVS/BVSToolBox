<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.2.0">
<procedure name="main">
<interface/>
<body>
<l>ToolName := 'Bead Inspection'</l>
<c></c>
<l>PathWidth_Int := 10</l>
<l>WidthTolerance_Int := 5</l>
<l>PositionTolerance_Int := 5</l>
<c></c>
<l>Polarity_Enum_Values := ['light', 'dark']</l>
<l>Polarity_Enum := 'light'</l>
<c></c>
<l>Sigma_Real := 2</l>
<c></c>
<l>Threshold_MInt_MinMax := [0, 255]</l>
<l>Threshold_MInt := 30</l>
<c></c>
<l>Left_Contour_Color := [0, 255, 0]</l>
<l>Right_Contour_Color := [0, 255, 0]</l>
<l>Error_Contour_Color := [255, 0, 0]</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="HalconRun">
<interface>
<io>
<par name="InputImage_Img" base_type="iconic" dimension="0"/>
<par name="Mask" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="Left_Contour" base_type="iconic" dimension="0"/>
<par name="Right_Contour" base_type="iconic" dimension="0"/>
<par name="Error_Contour" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="PathWidth_Int" base_type="ctrl" dimension="0"/>
<par name="WidthTolerance_Int" base_type="ctrl" dimension="0"/>
<par name="PositionTolerance_Int" base_type="ctrl" dimension="0"/>
<par name="Polarity_Enum" base_type="ctrl" dimension="0"/>
<par name="Sigma_Real" base_type="ctrl" dimension="0"/>
<par name="Threshold_MInt" base_type="ctrl" dimension="0"/>
<par name="InputImage_Img_Trafo" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="ToolResult" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>skeleton (Mask, Skeleton)</l>
<l>gen_contour_region_xld (Skeleton, ContourRef, 'center')</l>
<c></c>
<l>hom_mat2d_invert (InputImage_Img_Trafo, HomMat2DInvert)</l>
<l>affine_trans_contour_xld (ContourRef, ContourRef, HomMat2DInvert)</l>
<c></c>
<l>create_bead_inspection_model (ContourRef, PathWidth_Int, WidthTolerance_Int, PositionTolerance_Int, Polarity_Enum[1], ['sigma', 'threshold'], [Sigma_Real, Threshold_MInt], BeadInspectionModel)</l>
<c></c>
<l>apply_bead_inspection_model (InputImage_Img, Left_Contour, Right_Contour, Error_Contour, BeadInspectionModel, ErrorType)</l>
<c></c>
<l>if (|ErrorType| == 0)</l>
<l>    ToolResult := ['ok', 'Everything is ok']</l>
<l>else</l>
<l>    ToolResult := ['warn', 'Something is wrong']</l>
<l>endif</l>
<c></c>
<l>clear_bead_inspection_model (BeadInspectionModel)</l>
<c></c>
<l>return ()</l>
</body>
<docu id="HalconRun">
<parameters>
<parameter id="Error_Contour"/>
<parameter id="InputImage_Img"/>
<parameter id="InputImage_Img_Trafo"/>
<parameter id="Left_Contour"/>
<parameter id="Mask"/>
<parameter id="PathWidth_Int"/>
<parameter id="Polarity_Enum"/>
<parameter id="PositionTolerance_Int"/>
<parameter id="Right_Contour"/>
<parameter id="Sigma_Real"/>
<parameter id="Threshold_MInt"/>
<parameter id="ToolResult"/>
<parameter id="WidthTolerance_Int"/>
</parameters>
</docu>
</procedure>
<procedure name="HalconInit">
<interface/>
<body>
<l>return ()</l>
</body>
<docu id="HalconInit">
<parameters/>
</docu>
</procedure>
<procedure name="HalconFinalize">
<interface/>
<body>
<l>return ()</l>
</body>
<docu id="HalconFinalize">
<parameters/>
</docu>
</procedure>
</hdevelop>
