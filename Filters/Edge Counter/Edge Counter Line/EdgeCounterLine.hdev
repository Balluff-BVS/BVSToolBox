<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="13.0.3">
<procedure name="main">
<interface/>
<body>
<l>ToolName := 'Edge Counter Line'</l>
<c></c>
<l>ArrayCount := 1</l>
<c></c>
<l>Crosses_Region_Color := [0, 0, 255, 255]</l>
<l>Line_Region_Color := [255, 0, 0, 255]</l>
<c></c>
<l>AmplitudeThreshold_Int := 2</l>
<l>RoiWidthLength_Int := 5</l>
<l>Sigma_Real := 1.0</l>
<c></c>
<l>Transition_Enum_Values := ['all', 'positive', 'negative']</l>
<l>Transition_Enum := 'all'</l>
<c></c>
<l>Select_Enum_Values := ['all', 'first', 'last']</l>
<l>Select_Enum := 'all'</l>
<c></c>
<l>LineStartX_Int := 100</l>
<l>LineStartY_Int := 100</l>
<l>LineEndX_Int := 800</l>
<l>LineEndY_Int := 800</l>
<c></c>
<l>UseCalibration_MBool := false</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
<procedure name="HalconRun">
<interface>
<io>
<par name="InputImage_Img" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="Line_Region" base_type="iconic" dimension="0"/>
<par name="Crosses_Region" base_type="iconic" dimension="0"/>
<par name="OutputImage_Img" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="LineStartX_Int" base_type="ctrl" dimension="0"/>
<par name="LineStartY_Int" base_type="ctrl" dimension="0"/>
<par name="LineEndX_Int" base_type="ctrl" dimension="0"/>
<par name="LineEndY_Int" base_type="ctrl" dimension="0"/>
<par name="AmplitudeThreshold_Int" base_type="ctrl" dimension="0"/>
<par name="RoiWidthLength_Int" base_type="ctrl" dimension="0"/>
<par name="Sigma_Real" base_type="ctrl" dimension="0"/>
<par name="Transition_Enum" base_type="ctrl" dimension="0"/>
<par name="Select_Enum" base_type="ctrl" dimension="0"/>
<par name="UseCalibration_MBool" base_type="ctrl" dimension="0"/>
<par name="InputImage_Img_Calib" base_type="ctrl" dimension="0"/>
<par name="InputImage_Img_Trafo" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="NumberOfEdges_Int" base_type="ctrl" dimension="0"/>
<par name="DistancePeakToPeak_Real" base_type="ctrl" dimension="0"/>
<par name="PositionX_RealArray" base_type="ctrl" dimension="0"/>
<par name="PositionY_RealArray" base_type="ctrl" dimension="0"/>
<par name="DistancePeakToPeakCalibrated_Real" base_type="ctrl" dimension="0"/>
<par name="PositionXCalibrated_RealArray" base_type="ctrl" dimension="0"/>
<par name="PositionYCalibrated_RealArray" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>if (UseCalibration_MBool == true)</l>
<l>    CamParam := InputImage_Img_Calib[0:7]</l>
<l>    CamPose := InputImage_Img_Calib[8:14]</l>
<l>endif</l>
<c></c>
<l>PositionX_RealArray := 0</l>
<l>PositionY_RealArray := 0</l>
<l>NumberOfEdges_Int := 0</l>
<l>DistancePeakToPeak_Real := 0</l>
<c></c>
<l>PositionXCalibrated_RealArray := 0</l>
<l>PositionYCalibrated_RealArray := 0</l>
<l>DistancePeakToPeakCalibrated_Real := 0</l>
<c></c>
<l>affine_trans_image (InputImage_Img, OutputImage_Img, InputImage_Img_Trafo, 'constant', 'false')</l>
<c></c>
<l>get_image_size (OutputImage_Img, Width, Height)</l>
<l>gen_region_line (Line_Region, LineStartY_Int, LineStartX_Int, LineEndY_Int, LineEndX_Int)</l>
<c></c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,1]" as_ord="2">AmplitudeThreshold := AmplitudeThreshold_Int</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,1]" as_ord="3">RoiWidthLen2 := RoiWidthLength_Int</l>
<c></c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="2">LineRowStart_Measure_01_0 := LineStartY_Int</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="3">LineColumnStart_Measure_01_0 := LineStartX_Int</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="4">LineRowEnd_Measure_01_0 := LineEndY_Int</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,2]" as_ord="5">LineColumnEnd_Measure_01_0 := LineEndX_Int</l>
<c></c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="2">TmpCtrl_Row := 0.5 * (LineRowStart_Measure_01_0 + LineRowEnd_Measure_01_0)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="3">TmpCtrl_Column := 0.5 * (LineColumnStart_Measure_01_0 + LineColumnEnd_Measure_01_0)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="4">TmpCtrl_Dr := LineRowStart_Measure_01_0 - LineRowEnd_Measure_01_0</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="5">TmpCtrl_Dc := LineColumnEnd_Measure_01_0 - LineColumnStart_Measure_01_0</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="6">TmpCtrl_Phi := atan2(TmpCtrl_Dr, TmpCtrl_Dc)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="7">TmpCtrl_Len1 := 0.5 * sqrt(TmpCtrl_Dr * TmpCtrl_Dr + TmpCtrl_Dc * TmpCtrl_Dc)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="8">TmpCtrl_Len2 := RoiWidthLen2</l>
<c as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="11"></c>
<l as_id="measure1d" as_name="Measure 01" as_grp="[2,3]" as_ord="12">gen_measure_rectangle2 (TmpCtrl_Row, TmpCtrl_Column, TmpCtrl_Phi, TmpCtrl_Len1, TmpCtrl_Len2, Width, Height, 'nearest_neighbor', MsrHandle_Measure_01_0)</l>
<l as_id="measure1d" as_name="Measure 01" as_grp="[4,3]" as_ord="1">measure_pos (OutputImage_Img, MsrHandle_Measure_01_0, Sigma_Real, AmplitudeThreshold, Transition_Enum[1], Select_Enum[1], Row_Measure_01_0, Column_Measure_01_0, Amplitude_Measure_01_0, Distance_Measure_01_0)</l>
<l>gen_empty_region (Region2)</l>
<c></c>
<l>if(|Column_Measure_01_0| &gt; 1)</l>
<l>    NumberOfEdges_Int := |Row_Measure_01_0|    </l>
<l>    PositionX_RealArray := Column_Measure_01_0[0:|Column_Measure_01_0|-1]</l>
<l>    PositionY_RealArray := Row_Measure_01_0[0:|Column_Measure_01_0|-1]   </l>
<l>    DistancePeakToPeak_Real := sum(Distance_Measure_01_0)</l>
<c>    </c>
<l>    if (UseCalibration_MBool == true)</l>
<l>        image_points_to_world_plane (CamParam, CamPose, PositionY_RealArray, PositionX_RealArray, 'mm', PositionXCalibrated_RealArray, PositionYCalibrated_RealArray)</l>
<l>        distance_pp (PositionYCalibrated_RealArray[0], PositionXCalibrated_RealArray[0], PositionYCalibrated_RealArray[NumberOfEdges_Int - 1], PositionXCalibrated_RealArray[NumberOfEdges_Int - 1], DistancePeakToPeakCalibrated_Real)</l>
<l>    endif</l>
<c>            </c>
<l>    for CrossIndex := 1 to |Column_Measure_01_0| by 1 </l>
<l>        gen_rectangle2 (ROI_0, Row_Measure_01_0[CrossIndex-1], Column_Measure_01_0[CrossIndex-1], rad(45), 1, 8)</l>
<l>        gen_rectangle2 (ROI_1, Row_Measure_01_0[CrossIndex-1], Column_Measure_01_0[CrossIndex-1], rad(-45), 1, 8)</l>
<l>        union2 (ROI_0, ROI_1, Region1)</l>
<l>        union2 (Region1, Region2, Region2)     </l>
<l>    endfor</l>
<l>endif</l>
<c></c>
<l>if(|Column_Measure_01_0| == 1)</l>
<l>    NumberOfEdges_Int := |Row_Measure_01_0|    </l>
<l>    PositionX_RealArray := Column_Measure_01_0[0:|Column_Measure_01_0|-1]</l>
<l>    PositionY_RealArray := Row_Measure_01_0[0:|Column_Measure_01_0|-1]   </l>
<l>    DistancePeakToPeak_Real := 0</l>
<c>    </c>
<l>    if (UseCalibration_MBool == true)</l>
<l>        image_points_to_world_plane (CamParam, CamPose, PositionY_RealArray, PositionX_RealArray, 'mm', PositionXCalibrated_RealArray, PositionYCalibrated_RealArray)</l>
<l>    endif</l>
<c>            </c>
<l>    for CrossIndex := 1 to |Column_Measure_01_0| by 1 </l>
<l>        gen_rectangle2 (ROI_0, Row_Measure_01_0[CrossIndex-1], Column_Measure_01_0[CrossIndex-1], rad(45), 1, 8)</l>
<l>        gen_rectangle2 (ROI_1, Row_Measure_01_0[CrossIndex-1], Column_Measure_01_0[CrossIndex-1], rad(-45), 1, 8)</l>
<l>        union2 (ROI_0, ROI_1, Region1)</l>
<l>        union2 (Region1, Region2, Region2)     </l>
<l>    endfor</l>
<l>endif</l>
<c></c>
<l>Crosses_Region := Region2</l>
<c></c>
<l>close_measure (MsrHandle_Measure_01_0)</l>
<c></c>
<l>return ()</l>
</body>
<docu id="HalconRun">
<parameters>
<parameter id="AmplitudeThreshold_Int"/>
<parameter id="Crosses_Region"/>
<parameter id="DistancePeakToPeakCalibrated_Real"/>
<parameter id="DistancePeakToPeak_Real"/>
<parameter id="InputImage_Img"/>
<parameter id="InputImage_Img_Calib"/>
<parameter id="InputImage_Img_Trafo"/>
<parameter id="LineEndX_Int"/>
<parameter id="LineEndY_Int"/>
<parameter id="LineStartX_Int"/>
<parameter id="LineStartY_Int"/>
<parameter id="Line_Region"/>
<parameter id="NumberOfEdges_Int"/>
<parameter id="OutputImage_Img"/>
<parameter id="PositionXCalibrated_RealArray"/>
<parameter id="PositionX_RealArray"/>
<parameter id="PositionYCalibrated_RealArray"/>
<parameter id="PositionY_RealArray"/>
<parameter id="RoiWidthLength_Int"/>
<parameter id="Select_Enum"/>
<parameter id="Sigma_Real"/>
<parameter id="Transition_Enum"/>
<parameter id="UseCalibration_MBool"/>
</parameters>
</docu>
</procedure>
</hdevelop>
